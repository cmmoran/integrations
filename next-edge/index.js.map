{"version":3,"file":"index.js","sources":["../src/next-edge/index.ts"],"sourcesContent":["import request from \"request\"\nimport { NextApiRequest, NextApiResponse } from \"next\"\nimport { CookieSerializeOptions, serialize } from \"cookie\"\nimport parse from \"set-cookie-parser\"\nimport { IncomingHttpHeaders } from \"http\"\nimport { Buffer } from \"buffer\"\nimport { isText } from \"istextorbinary\"\nimport tldjs from \"tldjs\"\nimport getConfig from \"next/config\"\nconst { basePath } = getConfig() || { basePath: \"\" }\nexport function filterRequestHeaders(\n  headers: IncomingHttpHeaders,\n  forwardAdditionalHeaders?: string[],\n): IncomingHttpHeaders {\n  const defaultForwardedHeaders = [\n    \"accept\",\n    \"accept-charset\",\n    \"accept-encoding\",\n    \"accept-language\",\n    \"authorization\",\n    \"cache-control\",\n    \"content-type\",\n    \"cookie\",\n    \"host\",\n    \"user-agent\",\n    \"referer\",\n  ]\n\n  return Object.fromEntries(\n    Object.entries(headers).filter(\n      ([key]) =>\n        defaultForwardedHeaders.includes(key) ||\n        (forwardAdditionalHeaders ?? []).includes(key),\n    ),\n  )\n}\n\nconst encode = (v: string) => v\n\nfunction getBaseUrl(options: CreateApiHandlerOptions) {\n  let baseUrl = options.fallbackToPlayground\n    ? \"https://playground.projects.oryapis.com/\"\n    : \"\"\n\n  if (process.env.ORY_SDK_URL) {\n    baseUrl = process.env.ORY_SDK_URL\n  }\n\n  if (process.env.ORY_KRATOS_URL) {\n    baseUrl = process.env.ORY_KRATOS_URL\n  }\n\n  if (process.env.ORY_SDK_URL && process.env.ORY_KRATOS_URL) {\n    throw new Error(\"Only one of ORY_SDK_URL or ORY_KRATOS_URL can be set.\")\n  }\n\n  if (options.apiBaseUrlOverride) {\n    baseUrl = options.apiBaseUrlOverride\n  }\n\n  return baseUrl.replace(/\\/$/, \"\")\n}\n\n/**\n * The NextJS API configuration\n */\nexport const config = {\n  api: {\n    bodyParser: false,\n  },\n}\n\nexport interface CreateApiHandlerOptions {\n  /**\n   * If set overrides the API Base URL. Usually, this URL\n   * is taken from the ORY_KRATOS_URL environment variable.\n   *\n   * If you don't have a project you can use the playground project SDK URL:\n   *\n   *  https://playground.projects.oryapis.com\n   */\n  apiBaseUrlOverride?: string\n\n  /**\n   * Per default, this handler will strip the cookie domain from\n   * the Set-Cookie instruction which is recommended for most set ups.\n   *\n   * If you are running this app on a subdomain and you want the session and CSRF cookies\n   * to be valid for the whole TLD, you can use this setting to force a cookie domain.\n   *\n   * Please be aware that his method disables the `dontUseTldForCookieDomain` option.\n   */\n  forceCookieDomain?: string\n\n  /**\n   * Per default the cookie will be set on the hosts top-level-domain. If the app\n   * runs on www.example.org, the cookie domain will be set automatically to example.org.\n   *\n   * Set this option to true to disable that behaviour.\n   */\n  dontUseTldForCookieDomain?: boolean\n\n  /**\n   * If set to true will set the \"Secure\" flag for all cookies. This might come in handy when you deploy\n   * not on Vercel.\n   */\n  forceCookieSecure?: boolean\n\n  /**\n   * If set to true will fallback to the playground if no other value is set for the Ory SDK URL.\n   */\n  fallbackToPlayground?: boolean\n\n  /*\n   * Per default headers are filtered to forward only a fixed list.\n   *\n   * If you need to forward additional headers you can use this setting to define them.\n   */\n  forwardAdditionalHeaders?: string[]\n}\n\n/**\n * Creates a NextJS / Vercel API Handler\n *\n * For this handler to work, please set the environment variable `ORY_SDK_URL`.\n */\nexport function createApiHandler(options: CreateApiHandlerOptions) {\n  const baseUrl = getBaseUrl(options)\n  return (req: NextApiRequest, res: NextApiResponse<string>) => {\n    const { paths, ...query } = req.query\n    const search = new URLSearchParams()\n    Object.keys(query).forEach((key) => {\n      search.set(key, String(query[key]))\n    })\n\n    const path = Array.isArray(paths) ? paths.join(\"/\") : paths\n    const url = `${baseUrl}/${path}?${search.toString()}`\n\n    if (path === \"ui/welcome\") {\n      // A special for redirecting to the home page\n      // if we were being redirected to the hosted UI\n      // welcome page.\n      res.redirect(303, `../../..${basePath.startsWith(\"/\") ? basePath : \"/\"}`)\n      return\n    }\n\n    const isTls =\n      (req as unknown as { protocol: string }).protocol === \"https:\" ||\n      (req as unknown as { secure: boolean }).secure ||\n      req.headers[\"x-forwarded-proto\"] === \"https\"\n\n    req.headers = filterRequestHeaders(\n      req.headers,\n      options.forwardAdditionalHeaders,\n    )\n\n    req.headers[\"X-Ory-Base-URL-Rewrite\"] = \"false\"\n    req.headers[\"Ory-Base-URL-Rewrite\"] = \"false\"\n    req.headers[\"Ory-No-Custom-Domain-Redirect\"] = \"true\"\n\n    let buf = Buffer.alloc(0)\n    let code = 0\n    let headers: IncomingHttpHeaders\n    return new Promise<void>((resolve) => {\n      req\n        .pipe(\n          request(url, {\n            followAllRedirects: false,\n            followRedirect: false,\n            gzip: true,\n            json: false,\n          }),\n        )\n        .on(\"response\", (res) => {\n          if (res.headers.location) {\n            if (res.headers.location.indexOf(baseUrl) === 0) {\n              res.headers.location = res.headers.location.replace(\n                baseUrl,\n                `${basePath}/api/.ory`,\n              )\n            } else if (\n              res.headers.location.indexOf(`${basePath}/api/kratos/public/`) ===\n                0 ||\n              res.headers.location.indexOf(`${basePath}/self-service/`) === 0 ||\n              res.headers.location.indexOf(`${basePath}/ui/`) === 0\n            ) {\n              res.headers.location =\n                `${basePath}/api/.ory` + res.headers.location\n            }\n          }\n\n          const secure =\n            options.forceCookieSecure === undefined\n              ? isTls\n              : options.forceCookieSecure\n\n          const forwarded = req.rawHeaders.findIndex(\n            (h) => h.toLowerCase() === \"x-forwarded-host\",\n          )\n          const host =\n            forwarded > -1 ? req.rawHeaders[forwarded + 1] : req.headers.host\n          const domain = guessCookieDomain(host, options)\n\n          res.headers[\"set-cookie\"] = parse(res)\n            .map((cookie) => ({\n              ...cookie,\n              domain,\n              secure,\n              encode,\n            }))\n            .map(({ value, name, ...options }) =>\n              serialize(name, value, options as CookieSerializeOptions),\n            )\n\n          headers = res.headers\n          code = res.statusCode\n        })\n        .on(\"data\", (chunk: Buffer) => {\n          buf = Buffer.concat([buf, chunk], buf.length + chunk.length)\n        })\n        .on(\"end\", () => {\n          delete headers[\"transfer-encoding\"]\n          delete headers[\"content-encoding\"]\n          delete headers[\"content-length\"]\n\n          Object.keys(headers).forEach((key) => {\n            res.setHeader(key, headers[key])\n          })\n\n          res.status(code)\n          if (buf.length > 0) {\n            if (isText(null, buf)) {\n              res.send(\n                buf\n                  .toString(\"utf-8\")\n                  .replace(new RegExp(baseUrl, \"g\"), `${basePath}/api/.ory`),\n              )\n            } else {\n              res.write(buf)\n            }\n          }\n\n          res.end()\n          resolve()\n        })\n    })\n  }\n}\n\nexport function guessCookieDomain(\n  url: string | undefined,\n  options: CreateApiHandlerOptions,\n) {\n  if (!url || options.forceCookieDomain) {\n    return options.forceCookieDomain\n  }\n\n  if (options.dontUseTldForCookieDomain) {\n    return undefined\n  }\n\n  const parsed = tldjs.parse(url || \"\")\n\n  if (!parsed.isValid || parsed.isIp) {\n    return undefined\n  }\n\n  if (!parsed.domain) {\n    return parsed.hostname\n  }\n\n  return parsed.domain\n}\n"],"names":["getConfig","Buffer","request","parse","serialize","isText","tldjs"],"mappings":"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"}